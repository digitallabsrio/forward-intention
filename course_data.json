{
  "course_name": "The Hacker's Guide to Scaling Python - Learn Interactively",
  "course_overview": "Python, in all of its greatness, is often dismissed when needing to write performant and distributed applications. It’s considered to be slow and not suited for the task. In this course, you will find that with the right implementation of Python, you can write applications that scale horizontally, perform well, and are distributed. \n\nTo kick things off, you’ll learn about CPU scaling, concurrency, and event loops, all of which are crucial for implementing a distributed system. After that, you’ll move on to queue-based distribution, lock management, and group memberships, which are fundamental concepts for maintaining availability and consistency in distributed applications.\n\nIn the last half, you’ll learn how to build a REST API, how to deploy your app to a PaaS, and how to optimize your application's performance.\n\nBy the end of this course, you’ll be more productive with Python, you’ll be able to write faster applications that are distributed, and you’ll have a great new skill that is highly coveted.",
  "course_folder": "the hacker s guide to scaling python",
  "course_lessons": [
    "0-introduction to scaling",
    "1-scaling across cpus",
    "2-distributed systems",
    "3-service oriented architecture",
    "4-quiz on scaling",
    "5-introduction to cpu scaling",
    "6-using threads",
    "7-using processes",
    "8-using futures",
    "9-advanced futures usage",
    "10-daemon processes",
    "11-mehdi abaakouk on cpu scaling",
    "12-quiz on scaling across cpus",
    "13-coding challenge scaling across cpus",
    "14-introduction to event loops",
    "15-basic pattern blocking events",
    "16-using asyncio",
    "17-server and client",
    "18-naoki inada on asyncio",
    "19-quiz event loops",
    "20-coding challenge event loops",
    "21-introduction to functional programming",
    "22-functional programming toolkit maps filters and more",
    "23-functional programming toolkit next first and itertools",
    "24-quiz functional programming",
    "25-coding challenge functional programming",
    "26-introduction to queue based distribution",
    "27-rq",
    "28-celery",
    "29-celery handling failures",
    "30-celery chaining tasks",
    "31-celery multiple queues",
    "32-celery monitoring",
    "33-joshua harlow on task distribution",
    "34-quiz queue based distribution",
    "35-coding challenge queue based distribution",
    "36-introduction to designing for failure",
    "37-naive retrying",
    "38-retrying with tenacity",
    "39-quiz designing for failure",
    "40-coding challenge designing for failure",
    "41-project solution review",
    "42-introduction to lock management",
    "43-thread locks",
    "44-processes locks",
    "45-processes locks multiprocessing locks",
    "46-processes locks inter processes locks",
    "47-using etcd for distributed locking",
    "48-using tooz locking abstraction",
    "49-quiz lock management",
    "50-coding challenge lock management",
    "51-introduction to group membership",
    "52-creating joining and leaving groups",
    "53-using capabilities",
    "54-using watchers callbacks",
    "55-consistent hash rings",
    "56-partitioner",
    "57-alexys jacob monier on cluster management",
    "58-quiz group membership",
    "59-coding challenge group membership",
    "60-rest interfaces in python",
    "61-the wsgi protocol",
    "62-streaming data",
    "63-using etag",
    "64-asynchronous http api",
    "65-fast http client",
    "66-comparison between fast http clients",
    "67-testing rest api",
    "68-chris dent on http",
    "69-quiz building rest api",
    "70-coding challenge building rest api",
    "71-introduction to deploying on paas",
    "72-heroku",
    "73-amazon beanstalk",
    "74-google app engine",
    "75-openshift",
    "76-beyond paas",
    "77-quiz deploying on paas",
    "78-introduction to testing distributed systems",
    "79-setting up environments with tox",
    "80-manage external services with pifpaf",
    "81-using fixtures with pifpaf",
    "82-quiz testing distributed systems",
    "83-introduction to caching",
    "84-local caching",
    "85-memoization",
    "86-distributed caching",
    "87-jason myers on databases",
    "88-quiz caching",
    "89-coding challenge caching",
    "90-introduction to performance optimization",
    "91-memory and cpu profiling",
    "92-profiling strategy and a case",
    "93-zero copy",
    "94-disassembling code",
    "95-victor stinner on performance",
    "96-quiz performance",
    "97-coding challenge performance",
    "98-conclusive remarks"
  ],
  "repo_name": "forward-intention"
}
